<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>让Hexo博客支持流程图</title>
    <link href="/2020/03/22/%E8%AE%A9Hexo%E5%8D%9A%E5%AE%A2%E6%94%AF%E6%8C%81%E6%B5%81%E7%A8%8B%E5%9B%BE/"/>
    <url>/2020/03/22/%E8%AE%A9Hexo%E5%8D%9A%E5%AE%A2%E6%94%AF%E6%8C%81%E6%B5%81%E7%A8%8B%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<p>本文讲的是hexo的插件<a href="https://github.com/webappdevelp/hexo-filter-mermaid-diagrams">hexo-filter-mermaid-diagrams</a></p><h2 id="hexo-filter-mermaid-diagrams"><a class="markdownIt-Anchor" href="#hexo-filter-mermaid-diagrams"></a> hexo-filter-mermaid-diagrams</h2><h3 id="1-快速使用"><a class="markdownIt-Anchor" href="#1-快速使用"></a> 1. 快速使用</h3><ol><li>安装<br><br>在博客的根目录下使用命令</li></ol><pre class="highlight"><code class="">$ yarn add hexo-filter-mermaid-diagrams或者$ npm install hexo-filter-mermaid-diagrams</code></pre><ol start="2"><li>配置<br><br>配置hexo的配置文件<code>_config.yml</code></li></ol><pre class="highlight"><code class=""># mermaid chartmermaid: ## mermaid url https://github.com/knsv/mermaid  enable: true  # default true  version: &quot;7.1.2&quot; # default v7.1.2  options:  # find more api options from https://github.com/knsv/mermaid/blob/master/src/mermaidAPI.js    #startOnload: true  // default true</code></pre><ol start="3"><li>在模版文件引入mermaid.js<br>在<code>/themes/</code>里找到自己正在使用的主题的文件夹 ,打开里面的<code>layout</code>文件夹，在里面找到一个在文章页面有被加载的模版文件(官方写的是<code>after_footer</code>文件，我的主题没有)根据下面情况引入相应内容。</li></ol><ul><li>我的主题使用的是<a href="https://github.com/fluid-dev/hexo-theme-fluid">fluid</a>就添加下面的代码到<code>/themes/fluid/layout/plugins/footer.ejs</code>, 如果是其他尾缀类型的模版例如<code>pug</code>或<code>swig</code>请去看<a href="https://github.com/webappdevelp/hexo-filter-mermaid-diagrams">官方文档</a><br></li></ul><pre class="highlight"><code class="">&lt;% if (theme.mermaid.enable) { %&gt;  &lt;script src='https://unpkg.com/mermaid@&lt;%= theme.mermaid.version %&gt;/dist/mermaid.min.js'&gt;&lt;/script&gt;  &lt;script&gt;    if (window.mermaid) {      mermaid.initialize({theme: 'forest'});    }  &lt;/script&gt;&lt;% } %&gt;</code></pre><p>添加完成后，回到博客根目录的_config.yml，把external_link的值改为false，默认的为true</p><h3 id="2-出现问题"><a class="markdownIt-Anchor" href="#2-出现问题"></a> 2. 出现问题</h3><ol><li>没有效果<br><br>原因：语法不一样,三个点后面填写<code>mermaid</code></li></ol><pre class="highlight"><code class="">` ` `mermaid内容` ` `</code></pre><ol start="2"><li>报错Error: &lt;svg&gt; attribute viewBox: Expected number, “0 0 -Infinity -Infin…”.<br>原因：主题的代码高亮样式冲突了。（主题版本为v1.7.4）<br>将主题的代码高亮关了就好了.</li></ol><pre class="highlight"><code class="">highlight: # 代码高亮  enable: false</code></pre><h3 id="优化"><a class="markdownIt-Anchor" href="#优化"></a> 优化</h3><p>在模版<code>footer</code>文件引入mermaid.js的话会在博客的每个页面都加载这个文件，而我们往往并不是每个页面都会有用到这个插件。</p><ol><li>把<mark>配置部分</mark>放到<mark>主题配置</mark>(<code>/themes/fluid/_config.yml</code>)里<br></li></ol><pre class="highlight"><code class="">mermaid: # 流程图    enable: true    specific: true  # 开启后，只有在文章 Front-matter 里指定 `mermaid: true` 才会在文章页启动公式转换，以便在页面不包含公式时提高加载速度</code></pre><p>（就快速使用的第二步里的内容多了<code>specific</code>来控制是否启动转换）<br>*如果不想放在主题配置里把第二步的<code>theme.post</code>改成<code>config</code>就好了<br>2. 在<code>/themes/fluid/layout/_partial/plugins</code>新建<code>mermaid.ejs</code>文件，内容如下<br></p><pre class="highlight"><code class="">&lt;% if(theme.post.mermaid.enable &amp;&amp; (!theme.post.mermaid.specific || (theme.post.mermaid.specific &amp;&amp; page.mermaid))) { %&gt;&lt;%- js_ex(theme.static_prefix.mermaid, &quot;mermaid.min.js&quot;) %&gt;&lt;script&gt;    if (window.mermaid) {        mermaid.initialize({ theme: 'default' });    }&lt;/script&gt;&lt;% } %&gt;</code></pre><ol start="3"><li>引入文件到<code>scripts.ejs</code><br><br>在<code>/themes/fluid/layout/_partial/scripts.ejs</code>最下面添加</li></ol><pre class="highlight"><code class="">&lt;%- partial('_partial/plugins/mermaid.ejs') %&gt;</code></pre><ol start="4"><li>最后在<code>_static_prefix.yml</code>添加cdn即可<br>在<code>/themes/fluid/source/_static_prefix.yml</code>最下面添加</li></ol><pre class="highlight"><code class="">mermaid: https://cdn.bootcss.com/mermaid/8.4.8/</code></pre><p>*此处写死了版本号，想移到配置文件中请自行修改</p><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><p>优化部分的代码还是蛮好懂的，照着本身自带的math进行修改即可。就是代码高亮部分导致的报错并无法显示耗费了许多时间。下次遇到问题先在github的Issues里看看。</p>]]></content>
    
    
    
    <tags>
      
      <tag>记录</tag>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>面向对象技术</title>
    <link href="/2019/11/05/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%8A%80%E6%9C%AF/"/>
    <url>/2019/11/05/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%8A%80%E6%9C%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="面向对象技术"><a class="markdownIt-Anchor" href="#面向对象技术"></a> 面向对象技术</h1><h2 id="面向对象的基本概念"><a class="markdownIt-Anchor" href="#面向对象的基本概念"></a> 面向对象的基本概念</h2><ul><li>对象：属性（数据）+ 方法（操作）+ 对象ID</li><li>类（实体类/控制类/边界类）</li><li>继承与泛化：复用机制</li><li>封装：隐藏对象的属性和实现细节，仅对外公开接口</li><li>多态：不同对象收到同样的消息产生不同的结果</li><li>接口：一种特殊的类，他只有方法定义没有实现</li><li>重载：一个类可以有多个同名而参数类型不同的方法</li><li>模板类</li><li>消息和消息通信：消息是异步通信的。</li></ul><p><strong>面向对象设计7大原则</strong></p><ul><li>单一职责原则：设计目的单一的类</li><li>开发-封闭原则：对扩展开发，对修改封闭</li><li>李氏(Liskov)替换原则：子类可以替换父类</li><li>依赖倒置原则：要依赖于抽象，而不是具体实现；针对接口编程，不要针对实现编程</li><li>接口隔离原则：使用多个专门的接口比使用单一的总接口要好</li><li>组合重用原则：要尽量使用组合，而不是继承关系达到重用目的</li><li>迪米特(Demeter)原则(最少知识法则)：一个对象对其他对象有尽可能少的了解。（独立性）</li></ul><h2 id="uml统一建模语言"><a class="markdownIt-Anchor" href="#uml统一建模语言"></a> UML(统一建模语言)</h2><p>UML2.0:</p><ul><li>结构图<ul><li><mark>类图</mark></li><li>对象图</li><li>包图</li><li>组合结构图（2.0新加的）</li><li>构件图</li><li>部署图：软硬件之间映射</li><li>制品图</li></ul></li><li>行为图<ul><li><mark>用例图</mark>：系统与外部参与者的交互</li><li>顺序图：强调按时间顺序</li><li>通信图（协作图）</li><li>定时图（2.0新加的）</li><li>状态图</li><li>活动图：类似程序流程图，并行行为</li><li>交互概念图</li></ul></li></ul><h3 id="类图"><a class="markdownIt-Anchor" href="#类图"></a> 类图</h3><table><thead><tr><th>关系</th><th>说明</th><th>表示方法</th></tr></thead><tbody><tr><td>依赖关系</td><td>一个事物发生变化影响另一个事物</td><td>虚线实心箭头</td></tr><tr><td>泛化（继承）关系</td><td>特殊（派生）/一般（基类）关系</td><td>实线空心箭头</td></tr><tr><td>关联关系</td><td>描述了一组链，链是对象之间的连接。</td><td>实线</td></tr><tr><td>聚合关系</td><td>整体与部分生命周期不同（部分离开整体还能使用</td><td>实线空心菱形</td></tr><tr><td>组合关系</td><td>整体与部分生命周期相同（部分离开整体不能使用）</td><td>实线实心菱形</td></tr><tr><td>实现关系</td><td>接口与类之间的关系</td><td>虚线空心箭头</td></tr></tbody></table><h2 id="设计模式的分类"><a class="markdownIt-Anchor" href="#设计模式的分类"></a> 设计模式的分类</h2><ul><li>创建型模式<ul><li>工厂方法（factory method）模式</li><li>抽象工厂（abstract factory）模式</li><li>原型（porototype）模式</li><li>单例（singleton）模式</li><li>构建器（builder）模式</li></ul></li><li>结构型模式<ul><li>适配器(adapter)模式</li><li>桥接(bridge)模式</li><li>组合(composite)模式</li><li>装饰（decorator）模式</li><li>外观（facade）模式</li><li>享元（flyweight）模式</li><li>代理（proxy）模式</li></ul></li><li>行为模式<ul><li>职责链（chain of responsibility）模式</li><li>命令（command）模式</li><li>解释器（interpreter）模式</li><li>迭代器（iterator）模式</li><li>中介者（mediator）模式</li><li>备忘录（memento）模式</li><li>观察者（observer）模式</li><li>状态（state）模式</li><li>策略（strategy）模式</li><li>模版方法（template method）模式</li><li>访问者（visitor）模式</li></ul></li></ul><h3 id="创建型模式"><a class="markdownIt-Anchor" href="#创建型模式"></a> 创建型模式</h3><table><thead><tr><th>设计模式名称</th><th>简要说明</th><th>速记关键词</th></tr></thead><tbody><tr><td>Abstract Factory<br>抽象工厂模式</td><td>提供一个借口，可以创建<mark>一系列相关或相互依赖</mark>的对象，而无需指定它们具体的类</td><td>生产成系列对象</td></tr><tr><td>Builder<br>构建器模式</td><td>将一个<mark>复杂类</mark>的表示<mark>与其构造相分离</mark>，使得相同的构建过程能够得出不同的表示</td><td>复杂对象构造</td></tr><tr><td>Factory method<br>工厂方法模式</td><td>定义一个创建对象的接口，但由<mark>子类决定需要实例化哪一个类</mark>。工厂方法使得子类实例化的过程推迟。</td><td>动态生产对象</td></tr><tr><td>Prototype<br>原型模式</td><td>用原型实例指定创建对象的类型，并且通过拷贝这个原型来创建新的对象</td><td>克隆对象</td></tr><tr><td>Singleton<br>单例模式</td><td>保证一个类只有一个实例，并提供一个访问它的全局访问点</td><td>单实例</td></tr></tbody></table><h3 id="结构型模式"><a class="markdownIt-Anchor" href="#结构型模式"></a> 结构型模式</h3><table><thead><tr><th>设计模式名称</th><th>简要说明</th><th>速记关键字</th></tr></thead><tbody><tr><td>Adapter<br>适配器</td><td>将一个类的接口转换成用户希望得到的另一种接口。它使原本不相容的接口得以协同工作</td><td>转换接口</td></tr><tr><td>Bridge<br>桥接模式</td><td>将类的抽象部分和它的实现部分分离开来，使它们可以独立地变化</td><td>继承树拆分</td></tr><tr><td>Composite<br>组合模式</td><td>将对象组合成属性结构以表示“整体-部分”的层次结构，使得用户对单个对象和组合对象的使用具有一致性</td><td>树形目录结构</td></tr><tr><td>Decorator<br>装饰模式</td><td>动态地给一个对象<mark>添加一些额外的职责</mark>。它提供了用子类扩展功能的一个灵活的替代，比派生一个子类更佳灵活</td><td>附加职责</td></tr><tr><td>Facade<br>外观模式</td><td>定义一个高层接口，为子系统中的一组接口提供一个一致的外观，从而简化了该子系统的使用</td><td>对外统一接口</td></tr><tr><td>Flyweight<br>享元模式</td><td>提供支持大量细粒度对象共享的有效方法</td><td>文章共享文字对象</td></tr><tr><td>Proxy<br>代理模式</td><td>为其他对象提供一钟<mark>代理以控制</mark>这个对象的访问</td><td></td></tr></tbody></table>]]></content>
    
    
    
    <tags>
      
      <tag>软件设计师</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计算机网络与信息安全</title>
    <link href="/2019/11/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    <url>/2019/11/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B8%8E%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="计算机网络与信息安全"><a class="markdownIt-Anchor" href="#计算机网络与信息安全"></a> 计算机网络与信息安全</h1><h2 id="计算机网络"><a class="markdownIt-Anchor" href="#计算机网络"></a> 计算机网络</h2><h3 id="osirm七层模型"><a class="markdownIt-Anchor" href="#osirm七层模型"></a> OSI/RM七层模型</h3><html><table><th>层次</th><th>名称</th><th>主要功能</th><th>主要设备及协议</th><tr><td>7</td><td>应用层</td><td>实现具体的应用功能</td><td rowspan="3">POP3、FTP、HTTP、Telnet、SMTP<br>DHCP、TFTP、SNMP、DNS</td></tr><tr><td>6</td><td>表示层</td><td>数据格式与表达、加密、压缩</td></tr><tr><td>5</td><td>会话层</td><td>建立、管理和终止会话</td></tr><tr><td>4</td><td>传输层</td><td>端到端的连接</td><td>TCP、UDP</td></tr><tr><td>3</td><td>网络层</td><td>分组传输和路由选择</td><td>三层交换机、路由器<br>ARP、RARP、IP、ICMP、IGMP</td></tr><tr><td>2</td><td>数据链路层</td><td>传送以帧为单位的信息</td><td>网桥、交换机（多端网桥）、网卡<br>PPTP、L2TP、SLIP、PPP</td></tr><tr><td>1</td><td>物理层</td><td>二进制传输</td><td>中继器、集线器（多端中继器）</td></tr></table></html><ul><li><p>传输层</p><table><thead><tr><th>协议</th><th>特点</th></tr></thead><tbody><tr><td>TCP（传输控制协议）</td><td>- 面向连接的服务<br>- 可靠的</td></tr><tr><td>UDP（用户数据报协议）</td><td>- 无连接的服务 <br> - 不可靠</td></tr></tbody></table></li><li><p>网络层</p><ul><li>三层交换机：具有路由功能。</li><li>路由器：具有路由功能、可以解决交换机的广播问题。</li></ul><table><thead><tr><th>协议</th><th>说明</th></tr></thead><tbody><tr><td>ARP（地址解析协议）</td><td>把IP地址转换为MAC地址</td></tr><tr><td>RARP（反向地址解析协议）</td><td>把MAC地址转换为IP地址</td></tr><tr><td>IP（网际协议）</td><td>分配用户上网使用的数字标签</td></tr><tr><td>ICMP（因特网控制协议）</td><td>1.它是TCP/IP协议簇的一个子协议。<br>2.用于在IP主机、路由器之间传递控制消息。<br>3.控制消息是指网络通不通、主机是否可达、路由是否可用等网络本身的消息。</td></tr><tr><td>IGMP（因特网组管理协议）</td><td>组播协议（网关信息协议）</td></tr></tbody></table></li><li><p>数据链路层</p><ul><li>网桥：可以隔离冲突、但会出现广播风暴。</li></ul></li><li><p>物理层</p><ul><li>中继器：延长数据传输距离</li><li>集线器(Hub）: 可以分流、但会出现冲突域</li></ul></li></ul><h3 id="tcpip协议族"><a class="markdownIt-Anchor" href="#tcpip协议族"></a> TCP/IP协议族</h3><p>TCP/IP模型与OSI七层模型的对应：</p><html><table><th>TCP/IP</th><th>OSI</th><tr><td rowspan="3">应用层</td><td>应用层</td></tr><tr><td>表示层</td></tr><tr><td>会话层</td></tr><tr><td>传输层</td><td>传输层</td></tr><tr><td>网际层</td><td>网际层</td></tr><tr><td rowspan="2">网络接口层</td><td>数据链路层</td></tr><tr><td>物理层</td></tr></table></html><p><em>下列分层为TCP/IP分层</em></p><ul><li>应用层<ul><li>基于TCP协议<table><thead><tr><th>协议</th><th>端口</th><th>功能/说明</th></tr></thead><tbody><tr><td>POP3（离线收邮件）</td><td>110</td><td>邮件收取</td></tr><tr><td>FTP</td><td>20(主动)/21(控制)<br> (被动则两者随机)</td><td>文件传输</td></tr><tr><td>HTTP</td><td>80</td><td>超文本传输协议（访问网站）</td></tr><tr><td>HTTPS</td><td>443</td><td>带加密的超文本传输协议</td></tr><tr><td>Telnet</td><td>23</td><td>远程访问</td></tr><tr><td>SMTP（简单邮件传输协议）</td><td>25</td><td>邮件发送</td></tr></tbody></table></li><li>基于UDP协议<table><thead><tr><th>协议</th><th>端口</th><th>功能/说明</th></tr></thead><tbody><tr><td>DHCP</td><td>67</td><td>自动分配IP地址</td></tr><tr><td>TFTP</td><td>69</td><td>文件传输协议</td></tr><tr><td>SNMP</td><td>161</td><td>简单 网路管理协议</td></tr><tr><td>DNS</td><td>53</td><td>域名解析服务</td></tr></tbody></table></li><li>NFS：</li></ul></li><li>传输层<ul><li>TCP</li><li>UDP</li></ul></li><li>网际层 <br><br>IP、ICMP、IGMP、ARP、RARP</li><li>网络接口层 <br><br>CSMA/CD: 载波监听多路访问</li></ul><h3 id="ip地址"><a class="markdownIt-Anchor" href="#ip地址"></a> IP地址</h3><p><em>目前使用的是IPv4每个地址都是32位</em></p><table><thead><tr><th>网络类型</th><th>网络号与主机号的分布</th><th>网络号范围</th></tr></thead><tbody><tr><td>A类</td><td>8位网络号 + 24位主机号</td><td>0-127（二进制为0开头）</td></tr><tr><td>B类</td><td>16位网络号 + 16位主机号</td><td>128-191（二进制为10开头）</td></tr><tr><td>C类</td><td>24位网络号 + 8位主机号</td><td>192-223（二进制为110开头）</td></tr></tbody></table><p><em>D、E类省略</em></p><ul><li>子网掩码划分子网<ul><li>原来的网络号部分全为1（255）</li><li>主机号的前面划分出作为子网网络号的部分。<br>例如:划分27个子网，主机号前面5（2<sup>5</sup>=32&gt;27）位就为 11111（248）</li></ul></li></ul><h3 id="网络规划与设计"><a class="markdownIt-Anchor" href="#网络规划与设计"></a> 网络规划与设计</h3><p>四个过程：</p><ol><li>需求分析<ul><li>网络功能要求</li><li>网络性能要求</li><li>网络运行环境的要求</li><li>网络的可扩充性和可维护性的要求</li></ul></li><li>网络规划原则<ul><li>实用性原则</li><li>开放性原则</li><li>先进性原则</li></ul></li><li>网络设计与实施原则<ul><li>可靠性原则</li><li>安全性原则</li><li>高效性原则</li><li>可扩展性原则</li></ul></li><li>层次化网络设计<ul><li>核心层（快速、高效的数据分发）</li><li>汇入层（主要以过滤为主）</li><li>接入层（接入PC端）</li></ul></li></ol><h3 id="网络分类"><a class="markdownIt-Anchor" href="#网络分类"></a> 网络分类</h3><ul><li>按分布范围分<ul><li>局域网(LAN)</li><li>城域网(MAN)</li><li>广域网(WAN)</li><li>因特网</li></ul></li><li>按拓扑结构分<ul><li>总线型</li><li>星型</li><li>环形</li></ul></li></ul><h3 id="网络接入技术"><a class="markdownIt-Anchor" href="#网络接入技术"></a> 网络接入技术</h3><ul><li>有限接入<ul><li>公用交换电话网络(PSTN)</li><li>数字数据网(DDN)</li><li>综合业务数字网(ISDN)</li><li><strong>非对称数字用户线路（ADSL）</strong></li><li>同轴光纤技术(HFC)</li></ul></li><li>无限接入<ul><li>IEEE 802.11(WIFI)</li><li>IEEE 802.15(蓝牙Bluetooth)</li><li>红外(lrDA)</li><li>WAPI</li></ul></li><li>3G标准<ul><li>WCDMA</li><li>CDMA2000</li><li>TD-SCDMA</li><li>WirelessMAN(802.16)(WiMAX)</li></ul></li><li>4G标准<ul><li>FDD-LTE</li><li>TD-LTE</li><li>WirelessMAN(802.16m)(WiMAX)</li></ul></li></ul><h2 id="信息安全"><a class="markdownIt-Anchor" href="#信息安全"></a> 信息安全</h2><h3 id="对称加密技术"><a class="markdownIt-Anchor" href="#对称加密技术"></a> 对称加密技术</h3><p>使用同一套密钥</p><pre class="mermaid">graph LR发送者A-明文-->加密算法-Ke加密算法-Ke-->互联网-攻击者互联网-攻击者-->解密算法-Kd解密算法-Kd-->接受者B-明文</pre><p>对称加密：K<sub>e</sub>=K<sub>d</sub><br><br>特点：</p><ol><li>加密强度不高，但效率高;</li><li>密钥分发困难。</li></ol><p><mark>常见对称密钥算法：DES、3DES(三重DES)、RC-5、IDEA.</mark></p><h3 id="非对称加密技术"><a class="markdownIt-Anchor" href="#非对称加密技术"></a> 非对称加密技术</h3><ul><li>每人都有一成对的密钥（公钥和私钥）<br></li><li>发给谁就用谁的公钥加密，接收时用自己的私钥解密。</li></ul><p>非对称加密：：K<sub>e</sub>≠K<sub>d</sub> 密钥必须成对使用（公钥加密，私钥解密）<br><br>特点： 加密速度慢，但强度高。<br>常见非对称密钥加密算法：RSA、ECC.</p><h3 id="数字签名"><a class="markdownIt-Anchor" href="#数字签名"></a> 数字签名</h3><ul><li>每人都有一成对的密钥（公钥和私钥）<br></li><li>用发送方的私钥加密，接收时用发送方的公钥解密。</li></ul><h3 id="信息摘要"><a class="markdownIt-Anchor" href="#信息摘要"></a> 信息摘要</h3><p>*一般用于判断两者是否相同</p><p>数字摘要：由单向散列函数加密成固定长度的散列值。（不可逆）<br></p><p>常用算法有MD5, SHA等。<br><br>市场上广泛使用的MD5、SHA的散列值分别为128位和160位，由于SHA通常采用的密钥长度较长，因此安全性高于MD5</p><h3 id="pki公钥体系"><a class="markdownIt-Anchor" href="#pki公钥体系"></a> PKI公钥体系</h3><p>CA中心：</p><ul><li>管理密钥<ul><li>注册密钥</li><li>更新密钥</li><li>注销密钥</li></ul></li><li>分发证书给服务器（数字签名）</li></ul><h2 id="网络安全"><a class="markdownIt-Anchor" href="#网络安全"></a> 网络安全</h2><h3 id="各个网络层次的安全保障"><a class="markdownIt-Anchor" href="#各个网络层次的安全保障"></a> 各个网络层次的安全保障</h3><ul><li>物理层<ul><li>隔离</li><li>屏蔽</li></ul></li><li>数据链路层<ul><li>链路加密</li><li>PPTP</li><li>L2TP</li></ul></li><li>网络层<ul><li>防火墙</li><li>IPSec</li></ul></li><li>传输层<ul><li>TLS （基于SSL3.0）</li><li>SET</li><li>SSL</li></ul></li><li>会话层<ul><li>SSL</li></ul></li><li>表示层<ul><li>SSL</li></ul></li><li>应用层<ul><li>PGP</li><li>HTTPS</li><li>SSL<br><br>注意：SSL属于传输层、会话层、表示层、应用层四层</li></ul></li></ul><h3 id="主动攻击与被动攻击"><a class="markdownIt-Anchor" href="#主动攻击与被动攻击"></a> 主动攻击与被动攻击</h3><pre class="mermaid">graph TB被动攻击-->监听-保密性监听-保密性-->消息内容获取监听-保密性-->业务流分析主动攻击-->中断-可用性主动攻击-->篡改-完整性主动攻击-->伪造-真实性</pre><h3 id="防火墙"><a class="markdownIt-Anchor" href="#防火墙"></a> 防火墙</h3><p>特点：防外不防内</p><pre class="mermaid">graph LR防火墙-->网络级防火墙-->应用级网络级-->包过滤网络级-->代理网络级-->状态监测应用级-->双穴主机应用级-->屏蔽主机应用级-->屏蔽子网</pre><table><thead><tr><th>防火墙类型</th><th>说明</th></tr></thead><tbody><tr><td>包过滤</td><td>只检查数据包的格式（原地址、目标地址…是否合理），速度比较快，但安全性差。</td></tr><tr><td>代理</td><td>不仅检查包，还检查里面。速度慢，但安全性好。</td></tr><tr><td>状态监测</td><td>使用状态表。综合速度与安全性。</td></tr><tr><td>双穴主机</td><td>将内部网络与外部网络用一台主机分隔开</td></tr><tr><td>屏蔽主机</td><td>在双穴主机的基础上，用路屏蔽路由器将堡垒主机与外网隔开</td></tr><tr><td>屏蔽子网</td><td>两个屏蔽路由器隔开内网与外网<br>两个屏蔽路由器之间为BMZ(非军事区)<br><strong>BMZ区可被外网访问也可被内网访问</strong>（web服务器放在此）</td></tr></tbody></table><h2 id="安全防范体系"><a class="markdownIt-Anchor" href="#安全防范体系"></a> 安全防范体系</h2><ul><li>物理环境的安全性。</li><li>操作系统安全性。</li><li>网络安全性。</li><li>应用的安全性。</li><li>管理的安全性。</li></ul><h2 id="病毒与木马"><a class="markdownIt-Anchor" href="#病毒与木马"></a> 病毒与木马</h2><ul><li>病毒：编制或在计算机程序中插入的<mark>破坏</mark>计算机功能或者数据，以你影响计算机使用并且能够自我复制的一组计算机指令或者程序代码。</li><li>木马：计算机木马是一种后门程序，常被黑客用作控制远程计算机的工具。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>软件设计师</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>系统开发基础</title>
    <link href="/2019/11/04/%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80/"/>
    <url>/2019/11/04/%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h1 id="系统开发基础"><a class="markdownIt-Anchor" href="#系统开发基础"></a> 系统开发基础</h1><h2 id="软件开发模型"><a class="markdownIt-Anchor" href="#软件开发模型"></a> 软件开发模型</h2><ul><li><p>瀑布模型</p><p>用于需求明确的时候</p>  <html>  <table>  <th>阶段</th><th>具体活动</th><th>产物</th>  <tr><td rowspan="2">定义阶段</td><td>软件计划</td><td>1. 可行性分析<br>2. 软件计划书</td></tr>  <tr><td>需求分析</td><td> 需求规格说明书</td></tr>  <tr><td rowspan="3">开发阶段</td><td>软件设计</td><td>1. 概要设计说明书<br>2. 详细设计说明书</td></tr>  <tr><td>程序编码</td><td>系统</td></tr>  <tr><td>软件测试</td><td>测试报告<br>(测试计划、测试用意)</td></tr>  <tr><td>维护阶段</td><td>运行维护</td><td>交付给用户，跟踪维护。</td></tr>  </table>  </html><ul><li>V模型<ul><li>相对瀑布模型更重视测试</li></ul></li></ul></li><li><p>喷泉模型<br><br><em>面向对象的开发模型</em><br><br>没有明确的界限</p></li><li><p>演化模型</p><ul><li>原型模型<br><br>沟通后快速构建原型并交付，收集反馈并在下一轮进行改进。<ul><li>探索型原型</li><li>实验型原型</li><li>演化型原型：在原型进行后续的开发</li></ul></li><li>螺旋模型<br><ul><li>综合了瀑布模型与原型模型</li><li>给每个螺旋周期分成了四个步骤：制定计划、<mark>风险分析</mark>、实施工程、用户评估</li><li>强调风险分析，使用户、开发人员对演化层出现的风险有所了解，从而做出反应。螺旋模型适合开发庞大、复杂、高风险的系统。</li></ul></li></ul></li><li><p>统一过程（UP/RUP）</p><ul><li>“用例驱动，以架构为中心迭代，并增量”</li><li>分成四个阶段：<ol><li>初始（起始）</li><li>细化（精化）</li><li>构建</li><li>移交（交付）</li></ol></li></ul></li><li><p>敏捷方法</p><ul><li>自适应开发(ASD)</li><li>并列争球法(SCRUM)<ul><li>明确定义了的可重复的方法过程</li></ul></li><li>水晶方法(Crystal)<ul><li>用最少的纪律约束而仍能成功的方法</li></ul></li><li>特性驱动开发(FDD)<ul><li>开发人员分两类：富有经验的作为协调者、设计者和指导者，另一类则主要做源码编写。</li></ul></li><li>极限编程(XP)<ul><li>费用严格控制的公司中使用</li></ul></li></ul></li></ul><h2 id="软件开发方法"><a class="markdownIt-Anchor" href="#软件开发方法"></a> 软件开发方法</h2><ul><li>结构化方法(面向数据流)<ul><li>用户至上</li><li>严格区分工作阶段，每阶段有任务和结果</li><li>强调系统开发过程的整体性和全局性</li><li>系统开发过程工程化，文档资料标准化</li><li><mark>自顶向下，逐步分解（求精）</mark></li><li>不适合复杂、大型的项目</li></ul></li><li>原型法</li><li>面向对象方法<ul><li>更好的<mark>复用性</mark></li><li>关键在于建立一个全面、合理、统一的模型</li><li>分析、设计、实现三个阶段，<mark>界限不明确</mark>(喷泉模型)</li></ul></li><li>面向服务的方法 （SOA）</li><li>面向数据结构的方法 (Jackson)</li></ul><h2 id="需求分析"><a class="markdownIt-Anchor" href="#需求分析"></a> 需求分析</h2><ul><li>需求的任务</li><li>需求的过程<ul><li>问题识别</li><li>分析与综合</li><li>编制需求分析文档</li><li>需求分析与评审</li></ul></li><li>需求的分类<ul><li>功能需求</li><li>非功能需求</li><li>设计约束</li></ul></li><li>应用的工具<ul><li>数据流图(DFD)</li><li>数据字典(DD)</li><li>判定表</li><li>判定树（决策树）</li></ul></li></ul><h2 id="软件设计"><a class="markdownIt-Anchor" href="#软件设计"></a> 软件设计</h2><ul><li>软件设计的任务与活动</li><li>模块设计原则<ul><li>保证独立性（<mark>高内聚，低耦合</mark>）</li></ul></li><li>应用的工具<ul><li>IPO图</li><li>PDL（程序描述语言）:用来描述IPO图</li><li>PAD（问题分析图）</li><li>程序流程图</li><li>N/S盒图</li></ul></li></ul><p><em>下面由内聚程度高到低排列</em></p><table><thead><tr><th>内聚类型</th><th>描述</th></tr></thead><tbody><tr><td>功能内聚</td><td>完成<mark>一个单一功能</mark>，各个部分协同工作，缺一不可。</td></tr><tr><td>顺序内聚</td><td>处理元素相关，而且必须<mark>顺序执行</mark></td></tr><tr><td>通信内聚</td><td>所有处理元素<mark>集中在一个数据结构的区域</mark>上</td></tr><tr><td>过程内聚</td><td>处理元素相关，而且必须按<mark>特定的次序执行</mark></td></tr><tr><td>瞬时内聚（时间内聚）</td><td>所包含的任务必须在<mark>同一时间间隔</mark>内执行</td></tr><tr><td>逻辑内聚</td><td>完成<mark>逻辑上相关</mark>的一组任务</td></tr><tr><td>偶然内聚（巧合内聚）</td><td>完成一组<mark>没有关系或松散关系</mark>的任务</td></tr></tbody></table><p><em>下面由耦合程度低到高排列</em></p><table><thead><tr><th>耦合类型</th><th>描述</th></tr></thead><tbody><tr><td>非直接耦合</td><td>两个模块之间没有直接关系，他们之间的联系完全是通过<mark>主模块的控制和调用</mark>来实现的</td></tr><tr><td>数据耦合</td><td>一组模块借助参数表<mark>传递简单数据</mark></td></tr><tr><td>标记耦合</td><td>一组模块通过参数表<mark>传递记录信息</mark>（数据结构）</td></tr><tr><td>控制耦合</td><td>模块之间传递的信息中包含用于<mark>控制模块内部逻辑</mark>的信息</td></tr><tr><td>外部耦合</td><td>一组模块都访问同一全局简单变量，而且不是通过参数表传递该全局变量的信息</td></tr><tr><td>公共耦合</td><td>多个模块都访问同一个公共数据环境</td></tr><tr><td>内容耦合</td><td>一个模块直接访问另一个模块的内部数据；一个模块不通过正常入口转到另一个模块的内部；两个模块有一部分程序代码重叠；一个模块有多个入口</td></tr></tbody></table><h2 id="软件测试"><a class="markdownIt-Anchor" href="#软件测试"></a> 软件测试</h2><pre class="mermaid">graph LR静态测试-->桌面检查静态测试-->代码审查静态测试-->代码走查动态测试-->黑盒测试动态测试-->白盒测试动态测试-->灰盒测试黑盒测试-->等价类划分/边界值分析/错误推断/因果图白盒测试-->语句覆盖/判定覆盖/条件覆盖/条件判定覆盖/路径覆盖</pre><ul><li>等价类划分<ul><li>确定无效与有效等价类</li><li>设计用例尽可能多的覆盖有效类</li><li>设计用例只覆盖一个无效类</li></ul></li><li>边界值分析<ul><li>处理边界情况时最容易出错</li><li>选区的测试数据应该恰好等于、稍小于或稍大于边界值</li></ul></li></ul><pre class="mermaid">graph LR需求分析---验收测试概要设计---系统测试详细设计---集成测试编码---单元测试需求分析-->概要设计概要设计-->详细设计详细设计-->编码编码-->单元测试单元测试-->集成测试集成测试-->系统测试系统测试-->验收测试单元测试-.->模块接口/局部数据结构/边界条件/独立的路径/错误处理集成测试-.->模块间的接口和通信系统测试-.->需要硬件环境,模拟一个真实环境进行恢复测试/安全性测试/强度测试/性能测试/可靠性测试和安装测试验收测试-.->以用户为主导的测试-软件配置审查/验收测试</pre><ul><li>回归测试：测试出bug在提第二次提交的时候再测一遍。</li><li>性能测试<ul><li>负载测试：在一定的资源的条件下能够承受的负载（最大负荷量）是多少。</li><li>压力测试：达到失效压力下能够承受的最大压力。</li></ul></li></ul><h3 id="mccabe复杂度环路复杂度"><a class="markdownIt-Anchor" href="#mccabe复杂度环路复杂度"></a> McCabe复杂度（环路复杂度）</h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi><mo>−</mo><mi>n</mi><mo>+</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">    V(G)=m-n+2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span></span></p><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>m</td><td>边数</td></tr><tr><td>n</td><td>节点数</td></tr></tbody></table><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">封</mi><mi mathvariant="normal">闭</mi><mi mathvariant="normal">区</mi><mi mathvariant="normal">域</mi><mi mathvariant="normal">数</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">    V(G)=封闭区域数+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">封</span><span class="mord cjk_fallback">闭</span><span class="mord cjk_fallback">区</span><span class="mord cjk_fallback">域</span><span class="mord cjk_fallback">数</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p><h2 id="软件维护"><a class="markdownIt-Anchor" href="#软件维护"></a> 软件维护</h2><ul><li>可维护性因素决定<ul><li>可理解性<ul><li>文档</li></ul></li><li>可测试性</li><li>可修改性 (可扩展性)</li></ul></li><li>软件维护类型<ul><li>改正性维护：<mark>发布前</mark>的bug没改，发布后才改。</li><li>适应性维护：因为<mark>外部环境</mark>发生了变化的更改。</li><li>预防性维护：为了==未来（将来）==的某个时候而做的修改。</li><li>完善性维护(占维护的50%)：为了<mark>扩充功能和改善性能</mark>而进行的更改。</li></ul></li></ul><h2 id="软件工程"><a class="markdownIt-Anchor" href="#软件工程"></a> 软件工程</h2><h3 id="国家标准-软件文档管理指南-按阅读对象分类"><a class="markdownIt-Anchor" href="#国家标准-软件文档管理指南-按阅读对象分类"></a> 国家标准-软件文档管理指南-按阅读对象分类</h3><ul><li><strong>开发文档</strong><ul><li>可行性研究和项目书</li><li>需求规格说明</li><li>功能规格说明</li><li>设计规格说明（包括程序和书序规格说明）</li><li>开发计划</li><li>软件集成和测试计划</li><li>质量保证计划、标准、进度</li><li>安全和测试信息</li></ul></li><li>产品文档（跟用户有关的）<ul><li>培训手册</li><li>参考手册和用户指南</li><li>软件支持手册</li><li>产品手册和信息广告</li></ul></li><li>管理文档</li></ul><h3 id="软件质量保证"><a class="markdownIt-Anchor" href="#软件质量保证"></a> 软件质量保证</h3><p>外部和内部质量：</p><ul><li>功能性</li><li>可靠性</li><li>易用性</li><li>效率</li><li>维护性</li><li>可移植性</li></ul><h3 id="软件过程改进-cmmi"><a class="markdownIt-Anchor" href="#软件过程改进-cmmi"></a> 软件过程改进-CMMI</h3><p>CMMI（软件成熟度模型）：衡量一个企业达到了一个什么资质。</p><pre class="mermaid">graph BT初始级--纪律化-->可管理级可管理级--标准化-->已定义级已定义级--可预测-对过程和质量可以度量-->定量管理级定量管理级--持续优化改进-->优化管理级</pre><h2 id="项目管理"><a class="markdownIt-Anchor" href="#项目管理"></a> 项目管理</h2><p>十大知识领域：</p><ol><li>范围管理</li><li><mark>时间管理</mark></li><li>成本管理</li><li>质量管理</li><li>人力资源管理</li><li>沟通管理</li><li>风险管理</li><li>采购管理</li><li>整体管理</li><li>项目干系人管理</li></ol><h3 id="时间管理"><a class="markdownIt-Anchor" href="#时间管理"></a> 时间管理</h3><h4 id="前导图法单代号网络图pdm"><a class="markdownIt-Anchor" href="#前导图法单代号网络图pdm"></a> 前导图法（单代号网络图，PDM）</h4><p>求关键路径 = 求工期最长路径<br><br>关键活动：关键路径上的活动，<mark>总时差为0。</mark></p><h2 id="活动排序"><a class="markdownIt-Anchor" href="#活动排序"></a> 活动排序</h2><h3 id="箭头突发双代号网络图adm"><a class="markdownIt-Anchor" href="#箭头突发双代号网络图adm"></a> 箭头突发（双代号网络图，ADM）</h3><p>虚线：表示两者有关系（不耗时）</p><h2 id="项目管理-2"><a class="markdownIt-Anchor" href="#项目管理-2"></a> 项目管理</h2><p>风险曝光度（Risk Exposure）:风险<mark>出现的概率乘以</mark>风险<mark>可能造成的损失</mark>。</p>]]></content>
    
    
    
    <tags>
      
      <tag>软件设计师</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>并发控制与数据库完整性约束</title>
    <link href="/2019/10/28/%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%8C%E6%95%B4%E6%80%A7%E7%BA%A6%E6%9D%9F/"/>
    <url>/2019/10/28/%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%8C%E6%95%B4%E6%80%A7%E7%BA%A6%E6%9D%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="并发控制"><a class="markdownIt-Anchor" href="#并发控制"></a> 并发控制</h1><h2 id="事务"><a class="markdownIt-Anchor" href="#事务"></a> 事务</h2><p>四个特性：</p><ul><li>原子性</li><li>一致性</li><li>隔离性</li><li>持续性</li></ul><h2 id="并发产生的问题"><a class="markdownIt-Anchor" href="#并发产生的问题"></a> 并发产生的问题</h2><pre class="mermaid">graph TBid1(并发产生的问题)-->id2(丢失更新 / 不可重复读问题 / 读 脏 数据)id1(并发产生的问题)==>id3(封锁协议)id3(封锁协议)-->id4(S封锁-共享锁 / X封锁-排它锁 / 两段锁协议)id3(封锁协议)==>id5(死锁)id5(死锁)-->id6(预防 / 死锁的解除)</pre><h1 id="数据库完整性约束"><a class="markdownIt-Anchor" href="#数据库完整性约束"></a> 数据库完整性约束</h1><h2 id="实体完整性约束"><a class="markdownIt-Anchor" href="#实体完整性约束"></a> 实体完整性约束</h2><p>主键的完整性：</p><ul><li>非空</li><li>唯一</li></ul><h2 id="参照完整性约束"><a class="markdownIt-Anchor" href="#参照完整性约束"></a> 参照完整性约束</h2><p>外键的完整性：<br>要么空 否则 得有一个正确的索引</p><h2 id="用户自定义完整性约束"><a class="markdownIt-Anchor" href="#用户自定义完整性约束"></a> 用户自定义完整性约束</h2><h2 id="触发器"><a class="markdownIt-Anchor" href="#触发器"></a> 触发器</h2><p>脚本</p>]]></content>
    
    
    
    <tags>
      
      <tag>软件设计师</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL语言</title>
    <link href="/2019/10/28/SQL%E8%AF%AD%E8%A8%80/"/>
    <url>/2019/10/28/SQL%E8%AF%AD%E8%A8%80/</url>
    
    <content type="html"><![CDATA[<h1 id="sql语言"><a class="markdownIt-Anchor" href="#sql语言"></a> SQL语言</h1><h2 id="建表"><a class="markdownIt-Anchor" href="#建表"></a> 建表</h2><pre class="highlight"><code class="">CREATE TABLE &lt;表名1&gt; (&lt;列名&gt;&lt;数据类型&gt;[列级完整性约束条件]    [,&lt;列名&gt;&lt;数据库类型&gt;[列级完整性约束条件]]...    [,&lt;表现级完整性约束条件&gt;]);</code></pre><table><thead><tr><th>数据类型</th><th>说明</th></tr></thead><tbody><tr><td>char(N)</td><td>字符型</td></tr><tr><td>int</td><td>整形</td></tr><tr><td>float</td><td>浮点型</td></tr><tr><td>date YYYY-MM-DD</td><td>日期型</td></tr></tbody></table><table><thead><tr><th>完整性约束条件</th><th>说明</th></tr></thead><tbody><tr><td>NULL</td><td>可以取空值</td></tr><tr><td>NOT NULL</td><td>不能取空值</td></tr><tr><td>UNIQUE</td><td>取值唯一</td></tr><tr><td>PRIMARY KEY (列名)</td><td>设置为主键</td></tr><tr><td>FOREIGN KEY (列名1) PEFERENCES 表名2 (列名2)</td><td>设置(列1)为外键且索引(表2)的(列2)</td></tr></tbody></table><h2 id="修改与删除表"><a class="markdownIt-Anchor" href="#修改与删除表"></a> 修改与删除表</h2><ul><li>修改</li></ul><pre class="highlight"><code class="">ALTER TABLE &lt;表名&gt;[ADD &lt;新列名&gt;&lt;数据类型&gt;[列级完整性约束条件]][DROP&lt;列名/完整性约束名&gt;][MODIFY/CHANGE&lt;列名&gt;&lt;数据类型&gt;]</code></pre><ul><li>删除</li></ul><pre class="highlight"><code class="">DROP TABLE &lt;表名&gt;</code></pre><h2 id="查询"><a class="markdownIt-Anchor" href="#查询"></a> 查询</h2><pre class="highlight"><code class="">SELECT [ALL | DISTINCT] &lt;目标表达式&gt; [, &lt;目标表达式&gt;]...]FROM &lt;表名&gt; [, &lt;表名&gt;]...[WHERE &lt;条件表达式&gt;][GRORP BY &lt;列名1&gt; [HAVING&lt;条件表达式&gt;]][ORDER BY &lt;列名2&gt; [ASC | DESC]...]</code></pre><html><table><th>处理类型</th><th>处理子类</th><th>示例/语法</th><tr><td>结果排序</td><td>升序或降序</td><td>ORDER BY 字段名 DESC\|ASC</td></tr><tr><td rowspan="5">集函数</td><td>统计</td><td>COUNT([DISTINCT|ALL]<列名>)</列名></td></tr><tr><td>一列值的总和</td><td>SUM([DISTINCT|ALL]<列名>)</列名></td></tr><tr><td>一列值的平均值</td><td>AVG([DISTINCT|ALL]<列名>)</列名></td></tr><tr><td>求一列值中的最大值</td><td>MAX([DISTINCT|ALL]<列名>)</列名></td></tr><tr><td>求一列值中的最小值</td><td>MIN([DISTINCT|ALL]<列名>)</列名></td></tr><tr><td>对结果分组</td><td>将查询结果按列分组</td><td>GROUP BY <列名></列名></td></tr><tr><td>对分组结果筛选</td><td>对分组结果筛选</td><td>HAVING <条件列达式></条件列达式></td></tr><tr></tr></table></html>]]></content>
    
    
    
    <tags>
      
      <tag>软件设计师</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>规范化理论</title>
    <link href="/2019/10/26/%E8%A7%84%E8%8C%83%E5%8C%96%E7%90%86%E8%AE%BA/"/>
    <url>/2019/10/26/%E8%A7%84%E8%8C%83%E5%8C%96%E7%90%86%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="规范化理论"><a class="markdownIt-Anchor" href="#规范化理论"></a> 规范化理论</h1><ul><li><strong>数据冗余</strong></li><li>修改异常</li><li>插入异常</li><li>删除异常</li></ul><h2 id="函数依赖"><a class="markdownIt-Anchor" href="#函数依赖"></a> 函数依赖</h2><ul><li>部分依赖<br><br>依赖集1：{AB -&gt; C, A -&gt; C}</li></ul><pre class="mermaid">graph LRA-->CB-->C</pre><ul><li>传递依赖<br><br>依赖集2：{A -&gt; B, B -&gt; C}</li></ul><pre class="mermaid">graph LRA-->BB-->C</pre><h2 id="键"><a class="markdownIt-Anchor" href="#键"></a> 键</h2><ul><li>候选键<br><br>唯一标识元组，且无冗余</li><li>主键<br><br>任选一个候选键为主键。</li><li>外键<br><br>其他关系的主键</li></ul><h3 id="求候选键"><a class="markdownIt-Anchor" href="#求候选键"></a> 求候选键</h3><ul><li>图示法求候选键<ol><li>将关系的函数依赖关系，用“有向图”的方式表示。</li><li>找出入度为0的属性，并以该属性集合为起点，尝试遍历有向图，<strong>若能正常遍历图中所有结点</strong>，则该<mark>属性集</mark>即为关系模式的<mark>候选键</mark>。</li><li>若入度为0的属性集<strong>不能遍历图中所有结点</strong>，则需要尝试性的将一些<mark>中间结点</mark>（<em>既有入度，也有出度的结点</em>）并入入度为0的属性集，<mark>直到该集合你能遍历所有结点，集合为候选键。</mark></li></ol></li></ul><h2 id="主属性与非主属性"><a class="markdownIt-Anchor" href="#主属性与非主属性"></a> 主属性与非主属性</h2><p><strong>组成候选码的属性就是主属性，其它的就是非主属性。</strong></p><h2 id="范式"><a class="markdownIt-Anchor" href="#范式"></a> 范式</h2><ul><li>第一范式（1NF）<br><br>当且仅当所有域只包含<mark>原子值</mark>，<mark>即每个属性都是不可再分的数据项</mark>，则称该关系模式是第一范式。</li><li>第二范式（2NF）<br><br>当且仅当关系模式是第一范式（1NF），且每一个<mark>非主属性完全依赖候选键（没不完全依赖时）</mark>,则称该关系模式是第二范式。</li><li>第三范式（3NF）<br><br>当且仅当关系模式是第二范式（2NF），且该关系模型中没有<mark>非主属性传递依赖于候选键</mark>时，则称关系模式是第三范式。</li><li>BC范式（BCNF）<br><br>当且仅当依赖集中每个依赖的决定因素必定包含该关系模式的某个候选码。</li></ul><pre class="mermaid">graph TB1NF-->2NF1NF---属性值都是不可分的原子2NF-->3NF2NF---消除非主属性对候选键的部分依赖3NF-->BCNF3NF---清除非主属性对候选键的传递依赖BCNF---清除主属性对候选键的部分和传递依赖</pre><p>1NF ⊃ 2NF ⊃ 3NF ⊃ BCNF</p><h2 id="模式分解"><a class="markdownIt-Anchor" href="#模式分解"></a> 模式分解</h2><h3 id="保持函数依赖分解"><a class="markdownIt-Anchor" href="#保持函数依赖分解"></a> 保持函数依赖分解</h3><p>数据库模式 ρ={R1,R2,…,Rk} 是关系模式 R 的一个分解，F是R上的函数依赖集，ρ中每个模式Ri上的FD集是Fi。<br><br>如果{F1,F2,…,Fk}与F是等价的（即相互逻辑蕴含），那么称为分解ρ保持FD。<br><br><em>也就是说一个 关系模式 分成 多个关系模式的组合 表达的关系没有改变</em></p><h3 id="无损分解"><a class="markdownIt-Anchor" href="#无损分解"></a> 无损分解</h3><p>有损：不能还原。<br><br>无损：可以还原。<br><br>无损联结分解：指将一个关系模式分解成若干个关系模式后，通过自然联接和投影等运算仍能还原到原来的关系模式。</p><h3 id="表格法"><a class="markdownIt-Anchor" href="#表格法"></a> 表格法</h3><h3 id="公式法"><a class="markdownIt-Anchor" href="#公式法"></a> 公式法</h3><p>适应于两个点的时候</p>]]></content>
    
    
    
    <tags>
      
      <tag>软件设计师</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关系代数</title>
    <link href="/2019/10/24/%E5%85%B3%E7%B3%BB%E4%BB%A3%E6%95%B0/"/>
    <url>/2019/10/24/%E5%85%B3%E7%B3%BB%E4%BB%A3%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="关系代数"><a class="markdownIt-Anchor" href="#关系代数"></a> 关系代数</h1><html><table>    <th colspan="3">关系S1</th>    <tr><td>Sno</td><td>Sname</td><td>Sdept</td></tr>    <tr><td>No0001</td><td>Mary</td><td>IS</td></tr>    <tr><td>No0003</td><td>Candy</td><td>IS</td></tr>    <tr><td>No0004</td><td>Jam</td><td>IS</td></tr></table><table>    <th colspan="3">关系S2</th>    <tr><td>Sno</td><td>Sname</td><td>Sdept</td></tr>    <tr><td>No0001</td><td>Mary</td><td>IS</td></tr>    <tr><td>No0008</td><td>Katter</td><td>IS</td></tr>    <tr><td>No0021</td><td>Tom</td><td>IS</td></tr></table></html><h2 id="并"><a class="markdownIt-Anchor" href="#并"></a> 并</h2><p>合并所有</p><table>    <th colspan="3">S1∪S2</th>    <tr><td>Sno</td><td>Sname</td><td>Sdept</td></tr>    <tr><td>No0001</td><td>Mary</td><td>IS</td></tr>    <tr><td>No0003</td><td>Candy</td><td>IS</td></tr>    <tr><td>No0004</td><td>Jam</td><td>IS</td></tr>    <tr><td>No0008</td><td>Katter</td><td>IS</td></tr>    <tr><td>No0021</td><td>Tom</td><td>IS</td></tr></table><h2 id="交"><a class="markdownIt-Anchor" href="#交"></a> 交</h2><p>只留下两者都有的</p><table>    <th colspan="3">S1∩S2</th>    <tr><td>Sno</td><td>Sname</td><td>Sdept</td></tr>    <tr><td>No0001</td><td>Mary</td><td>IS</td></tr></table><h2 id="差"><a class="markdownIt-Anchor" href="#差"></a> 差</h2><p>前者里删除后者有的（注意有先后顺序）</p><table>    <th colspan="3">S1-S2</th>    <tr><td>Sno</td><td>Sname</td><td>Sdept</td></tr>    <tr><td>No0001</td><td>Mary</td><td>IS</td></tr>    <tr><td>No0003</td><td>Candy</td><td>IS</td></tr>    <tr><td>No0004</td><td>Jam</td><td>IS</td></tr></table><h2 id="笛卡尔积"><a class="markdownIt-Anchor" href="#笛卡尔积"></a> 笛卡尔积</h2><p>两者相乘（每项都与另外的每一个结合）</p><table>    <th colspan="6">S1×S2</th>    <tr>        <td>Sno</td>        <td>Sname</td>        <td>Sdept</td>        <td>Sno</td>        <td>Sname</td>        <td>Sdept</td>    </tr>    <tr>        <td>No0001</td>        <td>Mary</td>        <td>IS</td>        <td>No0001</td>        <td>Mary</td>        <td>IS</td>    </tr>    <tr>        <td>No0001</td>        <td>Mary</td>        <td>IS</td>        <td>No0008</td>        <td>Katter</td>        <td>IS</td>    </tr>        <tr>        <td>No0001</td>        <td>Mary</td>        <td>IS</td>        <td>No0021</td>        <td>Tom</td>        <td>IS</td>    </tr>    <tr>        <td>No0003</td>        <td>Candy</td>        <td>IS</td>        <td>No0001</td>        <td>Mary</td>        <td>IS</td>    </tr>    <tr>        <td>No0003</td>        <td>Candy</td>        <td>IS</td>        <td>No0008</td>        <td>Katter</td>        <td>IS</td>    </tr>        <tr>        <td>No0003</td>        <td>Candy</td>        <td>IS</td>        <td>No0021</td>        <td>Tom</td>        <td>IS</td>    </tr>    <tr>        <td>No0004</td>        <td>Jam</td>        <td>IS</td>        <td>No0001</td>        <td>Mary</td>        <td>IS</td>    </tr>    <tr>        <td>No0004</td>        <td>Jam</td>        <td>IS</td>        <td>No0008</td>        <td>Katter</td>        <td>IS</td>    </tr>        <tr>        <td>No0004</td>        <td>Jam</td>        <td>IS</td>        <td>No0021</td>        <td>Tom</td>        <td>IS</td>    </tr></table><h2 id="投影"><a class="markdownIt-Anchor" href="#投影"></a> 投影</h2><p>选择列</p><table>    <th colspan="2">π<sub>Sno,Sname</sub>(S1)</th>    <tr>        <td>Sno</td>        <td>Sname</td>    </tr>    <tr>        <td>No0001</td>        <td>Mary</td>    </tr>    <tr>        <td>No0003</td>        <td>Candy</td>    </tr>    <tr>        <td>No0004</td>        <td>Jam</td>    </tr></table><h2 id="选择"><a class="markdownIt-Anchor" href="#选择"></a> 选择</h2><p>选择行</p><table>    <th colspan="3">δ<sub>Sno=No0003</sub>(S1)</th>    <tr>        <td>Sno</td>        <td>Sname</td>        <td>Sdept</td>    </tr>    <tr>        <td>No0003</td>        <td>Candy</td>        <td>IS</td>    </tr></table><h2 id="自然连接"><a class="markdownIt-Anchor" href="#自然连接"></a> 自然连接</h2><html><table>    <th colspan="3">关系S1</th>    <tr><td>Sno</td><td>Sname</td><td>Sdept</td></tr>    <tr><td>No0001</td><td>Mary</td><td>IS</td></tr>    <tr><td>No0003</td><td>Candy</td><td>IS</td></tr>    <tr><td>No0004</td><td>Jam</td><td>IS</td></tr></table><table>    <th colspan="2">关系S2</th>    <tr><td>Sno</td><td>Age</td></tr>    <tr><td>No0001</td><td>23</td></tr>    <tr><td>No0008</td><td>21</td></tr>    <tr><td>No0021</td><td>22</td></tr></table></html><html><table>    <th colspan="4">S1⋈S2</th>    <tr>        <td>Sno</td>        <td>Sname</td>        <td>Sdept</td>        <td>Age</td>    </tr>    <tr>        <td>No0001</td>        <td>Mary</td>        <td>IS</td>        <td>23</td>    </tr></table></html><p><em>软件设计师考试常考用其他方式实现自然连接</em></p>]]></content>
    
    
    
    <tags>
      
      <tag>软件设计师</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据库系统</title>
    <link href="/2019/10/24/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/"/>
    <url>/2019/10/24/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="数据库系统"><a class="markdownIt-Anchor" href="#数据库系统"></a> 数据库系统</h1><h2 id="三级模式-两层映射"><a class="markdownIt-Anchor" href="#三级模式-两层映射"></a> 三级模式-两层映射</h2><ul><li>（视图级）外模式</li><li>（表级）概念模式</li><li>（文件级）内模式</li></ul><h2 id="数据库设计过程"><a class="markdownIt-Anchor" href="#数据库设计过程"></a> 数据库设计过程</h2><ul><li>需求分析<ul><li>数据库流图</li><li>数据字典</li><li>需求说明书</li></ul></li><li>概念结构设计<ul><li>ER模型</li></ul></li><li>逻辑结构设计<ul><li>关系模式</li></ul></li><li>物理设计</li></ul><h2 id="e-r模型"><a class="markdownIt-Anchor" href="#e-r模型"></a> E-R模型</h2><ul><li>一个实体型转换为一个关系模式</li><li>联系转关系模式<ul><li>1-1联系：可将联系合并至n端实体关系模型中。</li><li>1-n联系：可将联系合并至n端实体关系模式中。</li><li>m-n联系：联系必须单独转成关系模式</li></ul></li><li>三个以上实体间的一个多元联系<br>例：三个不同实体集和它们之间的多对多联系m:n:p,最少可转换为4个关系模式。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>软件设计师</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>操作系统</title>
    <link href="/2019/10/24/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    <url>/2019/10/24/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="操作系统"><a class="markdownIt-Anchor" href="#操作系统"></a> 操作系统</h1><h2 id="进程管理"><a class="markdownIt-Anchor" href="#进程管理"></a> 进程管理</h2><h3 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h3><ul><li>进程是程序在一个数据集合上运行的过程，它是系统的一个独立单位。它由<mark>程序块</mark>、<mark>进程控制块（PCB）<mark>和</mark>数据块</mark>三部分组成。</li><li>进程与程序的区别：<ul><li>进程是程序的一次执行过程，没有程序就没有进程。</li><li>程序是完成某个特定功能的一系列程序语句的集合，只要不被破坏，它就永远存在。</li><li>程序是一个静态的概念，而进程是一个动态的概念，它由创建而产生，完成任务后因撤销而消亡。</li><li>进程是系统进行资源分配和调度的独立单位，而程序不是。</li></ul></li></ul><h3 id="进程的状态"><a class="markdownIt-Anchor" href="#进程的状态"></a> 进程的状态</h3><p><mark>三态模型：</mark></p><pre class="mermaid">graph LRid(就绪)--调度-->id1(运行)id1(运行)--等待某个事件-->id2(等待)id2(等待)--等待事情发生-->id(就绪)id1(运行)--时间片到-->id(就绪)</pre><h3 id="进程的同步与互斥"><a class="markdownIt-Anchor" href="#进程的同步与互斥"></a> 进程的同步与互斥</h3><ul><li>直接制约关系</li><li>间接制约关系</li><li>临界资源</li></ul><h3 id="pv操作"><a class="markdownIt-Anchor" href="#pv操作"></a> PV操作</h3><ul><li>临界资源：诸进程间需要互斥方式对其进行共享的资源，如打印机、磁带机等</li><li>临界区：每个进程中访问临界资源的<mark>那段代码</mark>称为<mark>临界区</mark></li><li>信号量：是一种<mark>特殊的变量</mark>(可正可负)</li><li><mark>P是荷兰语Passeren,  V是荷兰语的Verhoog。</mark></li></ul><table><thead><tr><th>操作</th><th>S值（信号量）变化</th><th>说明</th></tr></thead><tbody><tr><td>P操作</td><td>S=S-1</td><td>申请资源</td></tr><tr><td>V操作</td><td>S=S+1</td><td>释放资源</td></tr></tbody></table><h4 id="同步模型"><a class="markdownIt-Anchor" href="#同步模型"></a> 同步模型</h4><pre class="mermaid">graph LRid(生产者)-->id1(市场)id1(市场)-->id2(消费者)</pre><table><thead><tr><th>生产者</th><th>消费者</th></tr></thead><tbody><tr><td>生产一个产品<br>P(s1)</td><td>P(s2)<br>从缓冲区取产品；</td></tr><tr><td>送产品到缓冲区<br>V(s2)</td><td>V(s1)<br>消费产品</td></tr></tbody></table><p>PV操作是成对的</p><h4 id="前趋图帮助理解"><a class="markdownIt-Anchor" href="#前趋图帮助理解"></a> 前趋图（帮助理解）</h4><pre class="mermaid">graph LRid(A)-->id3(D)id1(B)-->id3(D)id2(C)-->id3(D)id3(D)-->id4(E)</pre><p>例如上图：<br>Sa = Sb = Sc = Sd = 0;<br><br><mark>线程D需要等待线程A、B、C的V(Sa、Sb、Sc)的唤醒 : P(Sa、Sb、Sc)</mark></p><h3 id="死锁问题"><a class="markdownIt-Anchor" href="#死锁问题"></a> 死锁问题</h3><p>如果<mark>设计不当</mark>或进程在<mark>等待一件不可能发生的事</mark>，进程就会<mark>死锁</mark>。</p><h4 id="求至少需要多少个资"><a class="markdownIt-Anchor" href="#求至少需要多少个资"></a> 求至少需要多少个资</h4><p>给每个进程分配他们所需要的资源 - 1个再给系统留有一个</p><table><thead><tr><th>变量名</th><th>说明</th></tr></thead><tbody><tr><td>k</td><td>每个进程需要的资源</td></tr><tr><td>n</td><td>进程数</td></tr></tbody></table><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">    (k-1)n + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p><h4 id="死锁的避免"><a class="markdownIt-Anchor" href="#死锁的避免"></a> 死锁的避免</h4><ul><li>有序资源算法 （全部进程都给他们需要的）</li><li>银行家算法<ul><li>当一个进程对<mark>资源的最大需求量</mark>不超过<mark>系统中的资源数</mark>时可以接纳该进程。</li><li>进程可以分期请求资源，但请求的总数不能超过 <mark>最大需求量</mark></li><li>当系统现有的资源不能满足进程尚需资源数时，对进程的请求可以推迟分配，但总能使进程在 有限的时间里得到资源。</li></ul></li></ul><h2 id="存储管理"><a class="markdownIt-Anchor" href="#存储管理"></a> 存储管理</h2><h3 id="页式存储组织"><a class="markdownIt-Anchor" href="#页式存储组织"></a> 页式存储组织</h3><p>将程序与内存均划分为<mark>同样大小的块</mark>，以页为单位将程序调入内存。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">逻</mi><mi mathvariant="normal">辑</mi><mi mathvariant="normal">地</mi><mi mathvariant="normal">址</mi><mo>=</mo><mi mathvariant="normal">页</mi><mi mathvariant="normal">号</mi><mo>+</mo><mi mathvariant="normal">页</mi><mi mathvariant="normal">内</mi><mi mathvariant="normal">地</mi><mi mathvariant="normal">址</mi><mi mathvariant="normal">物</mi><mi mathvariant="normal">理</mi><mi mathvariant="normal">地</mi><mi mathvariant="normal">址</mi><mo>=</mo><mi mathvariant="normal">页</mi><mi mathvariant="normal">帧</mi><mi mathvariant="normal">号</mi><mi mathvariant="normal">（</mi><mi mathvariant="normal">物</mi><mi mathvariant="normal">理</mi><mi mathvariant="normal">块</mi><mi mathvariant="normal">号</mi><mi mathvariant="normal">）</mi><mo>+</mo><mi mathvariant="normal">页</mi><mi mathvariant="normal">内</mi><mi mathvariant="normal">地</mi><mi mathvariant="normal">址</mi></mrow><annotation encoding="application/x-tex">逻辑地址=页号+页内地址物理地址=页帧号（物理块号）+页内地址</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">逻</span><span class="mord cjk_fallback">辑</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">址</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">号</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">内</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">址</span><span class="mord cjk_fallback">物</span><span class="mord cjk_fallback">理</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">址</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">帧</span><span class="mord cjk_fallback">号</span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">物</span><span class="mord cjk_fallback">理</span><span class="mord cjk_fallback">块</span><span class="mord cjk_fallback">号</span><span class="mord cjk_fallback">）</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">内</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">址</span></span></span></span></span></p><p>优点：利用率高，碎片小，分配及管理简单。<br>缺点：增加了系统开销；可能产生抖动现象。</p><h3 id="段式存储组织"><a class="markdownIt-Anchor" href="#段式存储组织"></a> 段式存储组织</h3><p><em>按用户作业中的自然段（程序段）来划分逻辑空间，然后调入内存，<mark>段的长度可以不一样</mark>。</em></p><p>优点：多道程序共享内存，各段程序修改互不影响<br>缺点：内存利用率低，内存碎片浪费大</p><h3 id="段页式存储组织"><a class="markdownIt-Anchor" href="#段页式存储组织"></a> 段页式存储组织</h3><p><mark>段式和页式的综合体。</mark><br><br><mark>先分段，再分页。</mark><br><br>1个程序有若干个段，每个段中可以有若干页，每个页的大小相同，但每个段的大小不同。</p><p>优点：空间浪费小、存储共享容易、存储保护容易、能动态链接<br><br>缺点：由于管理软件的增加，复杂性和开销也随之增加，需要的硬件以及占用的内容也有所增加，使得执行速度大大下降。</p><h3 id="页面置换算法"><a class="markdownIt-Anchor" href="#页面置换算法"></a> 页面置换算法</h3><ul><li>最优算法（Optimal, OPT）</li><li>随机算法（RAND）</li><li>先进先出算法（FIFO）: 有可能产生“抖动”。例如, 43214543215序列，用4个页面比3个页面更差</li><li>最近最少使用算法(LRU)：不会“抖动”，LRU的理论依据是 <mark>“局部性原理”</mark>。<ul><li>时间局部性：刚被访问的内容，立即又被访问。</li><li>空间局部性：刚被访问的内容，临近的空间很快就访问。</li></ul></li></ul><h3 id="磁盘管理"><a class="markdownIt-Anchor" href="#磁盘管理"></a> 磁盘管理</h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">存</mi><mi mathvariant="normal">取</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mo>=</mo><mi mathvariant="normal">寻</mi><mi mathvariant="normal">道</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mo>+</mo><mi mathvariant="normal">等</mi><mi mathvariant="normal">待</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi></mrow><annotation encoding="application/x-tex">存取时间 = 寻道时间 + 等待时间</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">存</span><span class="mord cjk_fallback">取</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">寻</span><span class="mord cjk_fallback">道</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">等</span><span class="mord cjk_fallback">待</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span></span></span></span></span></p><p>寻道时间：指磁头移动到磁道所需的时间。<br><br>等待时间：等待读写的扇区转到磁头下方所用的时间。</p><h3 id="磁盘调度算法"><a class="markdownIt-Anchor" href="#磁盘调度算法"></a> 磁盘调度算法</h3><ul><li>先到先服务（FCFS）</li><li>最短寻道时间优先（SSTF）</li><li>扫描算法（SCAN）：电梯算法</li><li>循环扫描（CSCAN）算法</li></ul><h3 id="读取磁盘数据时间计算"><a class="markdownIt-Anchor" href="#读取磁盘数据时间计算"></a> 读取磁盘数据时间计算</h3><p>读取磁盘数据的时间应包括以下:</p><ol><li>找磁道的时间</li><li>找块（扇区）的时间，即旋转延迟时间。</li><li>传输时间。</li></ol><h2 id="作业管理"><a class="markdownIt-Anchor" href="#作业管理"></a> 作业管理</h2><h3 id="作业状态与作业管理"><a class="markdownIt-Anchor" href="#作业状态与作业管理"></a> 作业状态与作业管理</h3><pre class="mermaid">graph LRid(提交)-->id1(后备)id1(后备)-->id2(执行)id2(执行)-->id3(完成)</pre><h3 id="作业调度算法"><a class="markdownIt-Anchor" href="#作业调度算法"></a> 作业调度算法</h3><ul><li>先来先服务法</li><li>时间片轮转法</li><li>短时间优先法</li><li>最高优先权优先法</li><li>高响应比优先法</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">响</mi><mi mathvariant="normal">应</mi><mi mathvariant="normal">比</mi><mo>=</mo><mfrac><mrow><mi mathvariant="normal">作</mi><mi mathvariant="normal">业</mi><mi mathvariant="normal">等</mi><mi mathvariant="normal">待</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi></mrow><mrow><mi mathvariant="normal">作</mi><mi mathvariant="normal">业</mi><mi mathvariant="normal">执</mi><mi mathvariant="normal">行</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">    响应比 = \frac{作业等待时间}{作业执行时间}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">响</span><span class="mord cjk_fallback">应</span><span class="mord cjk_fallback">比</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.363em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.677em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">作</span><span class="mord cjk_fallback">业</span><span class="mord cjk_fallback">执</span><span class="mord cjk_fallback">行</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">作</span><span class="mord cjk_fallback">业</span><span class="mord cjk_fallback">等</span><span class="mord cjk_fallback">待</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h2 id="文件管理"><a class="markdownIt-Anchor" href="#文件管理"></a> 文件管理</h2><h3 id="索引文件结构"><a class="markdownIt-Anchor" href="#索引文件结构"></a> 索引文件结构</h3><ul><li>直接索引：</li></ul><pre class="mermaid">graph LRid1(索引节点)-->id2(物理盘块)</pre><ul><li>一级间接索引：</li></ul><pre class="mermaid">graph LRid1(索引节点)-->id3(地址项)id3(地址项)-->id2(物理盘块)</pre><ul><li>二级间接索引：</li></ul><pre class="mermaid">graph LRid1(索引节点)-->id3(地址项)id3(地址项)-->id4(地址项)id4(地址项)-->id2(物理盘块)</pre><p><em>物理盘块存放的是逻辑页</em></p><ul><li>逻辑页计算公式<ul><li>直接索引时1个节点对应一个逻辑页</li><li>间接索引时一个索引节点代表的逻辑页数为：</li></ul></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mi>x</mi></msup></mrow><annotation encoding="application/x-tex">n^x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span></span></p><table><thead><tr><th>变量</th><th>说明</th></tr></thead><tbody><tr><td>n</td><td>一层间接索引的地址项数</td></tr><tr><td>x</td><td>间接索引的层数</td></tr></tbody></table><h3 id="树形目录结构"><a class="markdownIt-Anchor" href="#树形目录结构"></a> 树形目录结构</h3><ul><li>相对路径</li><li>绝对路径</li></ul><h3 id="空间存储空间的管理"><a class="markdownIt-Anchor" href="#空间存储空间的管理"></a> 空间存储空间的管理</h3><ul><li>位视图</li></ul><h2 id="设备管理"><a class="markdownIt-Anchor" href="#设备管理"></a> 设备管理</h2><h3 id="数据传输控制方式"><a class="markdownIt-Anchor" href="#数据传输控制方式"></a> 数据传输控制方式</h3><p><strong>以下按效率排名</strong></p><ol><li>I/O处理器（IOP）</li><li>通道方式</li><li>DMA方式：DMA方式是为了在<mark>主存与外设之间</mark>实现高速、批量数据交换而设置的。DMA方式比程序控制方式与中断方式都高效。</li><li>程序中断方式：与程序控制方式相比，中断方式因为CPU无需等待而提高了传输请求的响应速度。</li><li>程序控制（查询）方式：分为<mark>无条件传送</mark>和<mark>程序查询</mark>方式两种。方法简单，硬件开销小，但I/O能力不高，严重影响CPU的利用率。</li></ol><h3 id="虚设备与spooling技术"><a class="markdownIt-Anchor" href="#虚设备与spooling技术"></a> 虚设备与SPOOLING技术</h3><p>SPOOLing是关于慢速字符设备如何与计算机交换信息的一种技术，通常称为“假脱机技术”。SPOOLing技术通过磁盘实现。<br><br><em>可简单想象为一个队列把任务排队按序执行</em></p>]]></content>
    
    
    
    <tags>
      
      <tag>软件设计师</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>校验码</title>
    <link href="/2019/10/22/%E6%A0%A1%E9%AA%8C%E7%A0%81/"/>
    <url>/2019/10/22/%E6%A0%A1%E9%AA%8C%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h1 id="校验码"><a class="markdownIt-Anchor" href="#校验码"></a> 校验码</h1><h2 id="奇偶校验码"><a class="markdownIt-Anchor" href="#奇偶校验码"></a> 奇偶校验码</h2><p><em>有效信息位加一个二进制位(校验位)</em></p><ul><li>可检查奇数个位数出错的情况</li></ul><p>奇校验：整个校验码（信息位和校验位）中的“1”的个数为奇数<br><br>偶校验：整个校验码（信息位和校验位）中的“1”的个数为偶数</p><p>例如：</p><table><thead><tr><th>校验法（奇/偶）</th><th>信息位</th><th>校验位</th><th>校验码</th></tr></thead><tbody><tr><td>奇校验</td><td>1010</td><td>1</td><td>1010<mark>1</mark></td></tr><tr><td>奇校验</td><td>1101</td><td>0</td><td>1101<mark>0</mark></td></tr><tr><td>偶校验</td><td>1011</td><td>1</td><td>1011<mark>1</mark></td></tr><tr><td>偶校验</td><td>0101</td><td>0</td><td>0101<mark>0</mark></td></tr></tbody></table><h2 id="循环校验码crc"><a class="markdownIt-Anchor" href="#循环校验码crc"></a> 循环校验码CRC</h2><p><em>k位信息码拼接r位校验码</em><br><strong>CRC可检错不可纠错</strong><br>运算过程中使用到<em>模2除法</em></p><p>模2除法：在除法运算的过程中不计其进位与借位的的除法。</p><h2 id="海明码"><a class="markdownIt-Anchor" href="#海明码"></a> 海明码</h2><p><em>在有效信息位中加入校验码位，使码距比较均匀地拉大。</em></p><ul><li>可检错，也可纠错</li></ul><p>海明校验码公式:</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>r</mi></msup><mo>≥</mo><mi>m</mi><mo>+</mo><mi>r</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^r ≥ m+r+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.850362em;vertical-align:-0.13597em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p><table><thead><tr><th>字符名</th><th>含义</th><th>特征</th></tr></thead><tbody><tr><td>m</td><td>有效信息位的位数</td><td></td></tr><tr><td>r</td><td>校验码位数</td><td></td></tr></tbody></table><p>*一般软考中级考试是提供m(有效信息位的位数)求最少的r(校验码位数)</p>]]></content>
    
    
    
    <tags>
      
      <tag>软件设计师</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Cache</title>
    <link href="/2019/10/20/Cache/"/>
    <url>/2019/10/20/Cache/</url>
    
    <content type="html"><![CDATA[<h1 id="cache"><a class="markdownIt-Anchor" href="#cache"></a> Cache</h1><ul><li>在计算机的存储系统体系中，Cache是访问速度最快的层次（若有寄存器，则寄存器最快）</li><li>使用Cache改善系统性能的依据是程序的局部性原理。</li><li>如果 h 代表对Cache的<mark>访问命令率</mark>，<br><br>t<sub>1</sub> 表示Cache的周期时间，<br><br>t<sub>2</sub> 表示主存储器周期时间，<br><br>以读操作为例，使用“Cache + 主存储器”的系统的平均周期为 t<sub>3</sub> 则：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mn>3</mn></msub><mo>=</mo><mi>h</mi><mo>×</mo><msub><mi>t</mi><mn>1</mn></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>h</mi><mo stretchy="false">)</mo><mo>×</mo><msub><mi>t</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">    t_3 = h × t_1 + (1 - h) × t_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中 <mark>(1 - h)</mark> 又称 <mark>失效率（未命中率）</mark></p><h2 id="映象"><a class="markdownIt-Anchor" href="#映象"></a> 映象</h2><p><strong>映象(Cache与主存的对应关系）是直接由硬件控制的。</strong></p><ul><li>直接相联映象：硬件电路较简单，但冲突率很高。</li><li>全相联映象：电路难于设计和实现，只适用于小容量的Cache,冲突率较低。</li><li>组相联映象：直接相联与全相联的折中。</li></ul><p>地址映象是将主存与Cache的存储空间划分为若干大小相同的页（块）。<br><br>例如：<br><br>某机的主存容量为1GB，划分为2048页，每页<mark>512KB</mark>；<br><br>Cache容量为8MB，划分为16页，每页<mark>512KB</mark></p>]]></content>
    
    
    
    <tags>
      
      <tag>软件设计师</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>流水线</title>
    <link href="/2019/10/20/%E6%B5%81%E6%B0%B4%E7%BA%BF/"/>
    <url>/2019/10/20/%E6%B5%81%E6%B0%B4%E7%BA%BF/</url>
    
    <content type="html"><![CDATA[<h1 id="流水线"><a class="markdownIt-Anchor" href="#流水线"></a> 流水线</h1><h2 id="公式"><a class="markdownIt-Anchor" href="#公式"></a> 公式</h2><p>流水线周期（Δt）：执行时间最长的一段<br><br>理论公式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>t</mi><mn>1</mn></msub><mo>+</mo><msub><mi>t</mi><mn>2</mn></msub><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>t</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">    (t_1 + t_2 + \cdots + t_k) + (n - 1) * Δt</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathdefault">t</span></span></span></span></span></p><p>实践公式：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>∗</mo><mi mathvariant="normal">Δ</mi><mi>t</mi><mo>+</mo><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">    k * Δt + (n-1) * Δt</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">Δ</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathdefault">t</span></span></span></span></span></p><p>注意：</p><ul><li>k 为执行完一条指令需要多少个步骤<br></li><li>Δt 在题目中一般指单位时间</li></ul><h2 id="流水线吞吐量"><a class="markdownIt-Anchor" href="#流水线吞吐量"></a> 流水线吞吐量</h2><p>流水线吞吐量（Though Put, TP）指在<mark>单位时间</mark>内流水线所完成的<mark>任务数量</mark>或输出的<mark>结果数量</mark>。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mi>P</mi><mo>=</mo><mfrac><mrow><mi mathvariant="normal">指</mi><mi mathvariant="normal">令</mi><mi mathvariant="normal">条</mi><mi mathvariant="normal">数</mi></mrow><mrow><mi mathvariant="normal">流</mi><mi mathvariant="normal">水</mi><mi mathvariant="normal">线</mi><mi mathvariant="normal">执</mi><mi mathvariant="normal">行</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">    TP = \frac {指令条数}{流水线执行时间}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.363em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.677em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">流</span><span class="mord cjk_fallback">水</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">执</span><span class="mord cjk_fallback">行</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">指</span><span class="mord cjk_fallback">令</span><span class="mord cjk_fallback">条</span><span class="mord cjk_fallback">数</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ul><li>最大吞吐量</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><msub><mi>P</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>=</mo><munder><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>n</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></munder><mfrac><mi>n</mi><mrow><mo stretchy="false">(</mo><mi>k</mi><mo>+</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mrow><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">    TP_{max} = \lim_{n \to \infty} \frac {n}{(k+n-1)Δt} = \frac {1}{Δt}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.0435600000000003em;vertical-align:-0.936em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.1em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop">lim</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">Δ</span><span class="mord mathdefault">t</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord mathdefault">t</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h3 id="超标量流水线"><a class="markdownIt-Anchor" href="#超标量流水线"></a> 超标量流水线</h3><p>度：同时进行同一步骤的流水线条数</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">原</mi><mi mathvariant="normal">公</mi><mi mathvariant="normal">式</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">的</mi><mi>n</mi><mo>=</mo><mfrac><mi>n</mi><mi mathvariant="normal">度</mi></mfrac></mrow><annotation encoding="application/x-tex">    原公式中的n = \frac {n}{度}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord cjk_fallback">原</span><span class="mord cjk_fallback">公</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">的</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">度</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>]]></content>
    
    
    
    <tags>
      
      <tag>软件设计师</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows2012安装IIS和FTP</title>
    <link href="/2019/06/06/Windows2012%E5%AE%89%E8%A3%85IIS%E5%92%8CFTP/"/>
    <url>/2019/06/06/Windows2012%E5%AE%89%E8%A3%85IIS%E5%92%8CFTP/</url>
    
    <content type="html"><![CDATA[<h2 id="windows2012安装iis和ftp"><a class="markdownIt-Anchor" href="#windows2012安装iis和ftp"></a> Windows2012安装IIS和FTP</h2><h3 id="1-安装iis"><a class="markdownIt-Anchor" href="#1-安装iis"></a> 1. 安装IIS</h3><ol><li>打开Windows 2012的服务器管理器，选择 管理→添加角色和功能。<br><img src="TB147AsHXXXXXc7XpXXjcp1IXXX-780-536.jpg" srcset="/img/loading.gif" alt=""></li><li>进入 添加角色和功能向导，选择 “Web服务器(IIS)”。<br><img src="TB18WwvHXXXXXbiXpXXJy1J_VXX-800-567.jpg" srcset="/img/loading.gif" alt=""></li><li>根据情况选择对应功能，这里选择.Net3.5。<br><img src="TB1i2AuHXXXXXbFXpXXJy1J_VXX-800-567.jpg" srcset="/img/loading.gif" alt=""></li><li>安装角色服务，选择对应的安全性选项，如图。<br><img src="TB1V5AtHXXXXXcjXpXXJy1J_VXX-800-567.jpg" srcset="/img/loading.gif" alt=""></li><li>选择“FTP服务器”，以及开设主机必须要用的“管理工具”，此项重要。<br><img src="TB1X3.kHXXXXXXraVXXJy1J_VXX-800-567.jpg" srcset="/img/loading.gif" alt=""></li><li>等待安装，时间稍长，耐心等待即可。<br><img src="TB1aLQsHXXXXXXiXFXXJy1J_VXX-800-567.jpg" srcset="/img/loading.gif" alt=""></li><li>安装完毕，打开IIS管理器查看。<br><img src="TB1Pi.mHXXXXXaoaXXXXgLyVXXX-945-533.jpg" srcset="/img/loading.gif" alt=""></li><li>打开了IIS管理器，看到程序池，站点，至此，在Windows2012下安装IIS已经成功。<br><img src="TB1aoQsHXXXXXcSXpXXQV7OGVXX-668-525.jpg" srcset="/img/loading.gif" alt=""></li></ol><h3 id="2-安装ftp"><a class="markdownIt-Anchor" href="#2-安装ftp"></a> 2. 安装FTP</h3><ol><li>单击图标进入服务器管理器。<br><img src="TB11NgLHVXXXXXaXXXXXXXXXXXX.png" srcset="/img/loading.gif" alt=""></li><li>单击 IIS， 右击服务器，选择 Internet 信息服务（IIS）管理器。<br><img src="TB1f4EuHVXXXXa4XpXXXXXXXXXX.png" srcset="/img/loading.gif" alt=""></li><li>右击服务器，选择添加 FTP 站点。<br><img src="TB1piQgHVXXXXcPXFXXXXXXXXXX.png" srcset="/img/loading.gif" alt=""></li><li>填写 FTP 站点名称，选择 FTP 路径，单击下一步。<br><img src="TB1gx7xHVXXXXb5XXXXXXXXXXXX.png" srcset="/img/loading.gif" alt=""></li><li>IP地址选择全部未分配，SSL选择无SSL。<br><img src="TB1vkwEHVXXXXa7XXXXXXXXXXXX.png" srcset="/img/loading.gif" alt=""></li><li>身份验证选择基本，授权选择所有用户 ，权限设置为读取与写入 。单击完成。<br><img src="TB1POPTHVXXXXbBXXXXXXXXXXXX.png" srcset="/img/loading.gif" alt=""></li><li>使用系统默认的 administrator 账号和密码，进行登录测试，现在您可以可以正常上传下载文件。<br><img src="TB1a3.KHVXXXXXsXXXXXXXXXXXX.png" srcset="/img/loading.gif" alt=""></li></ol><h3 id="3-阿里云安全设置开发ftp端口"><a class="markdownIt-Anchor" href="#3-阿里云安全设置开发ftp端口"></a> 3. 阿里云安全设置开发ftp端口</h3><pre><code>添加规则选择FTP![](ftp.png)</code></pre><h3 id="遇到的问题与解决办法"><a class="markdownIt-Anchor" href="#遇到的问题与解决办法"></a> 遇到的问题与解决办法</h3><pre><code>1.Xftp 提示无法显示远程文件![](xftpnoshowdir.png)点击属性-&gt;选项-&gt;将使用被动模式选项去掉即可![](2018091715131039.png)\* 如果还不行请检查目录是否属于当前用户下的目录，用户是否有权限访问当前目录</code></pre><h2 id="摘自"><a class="markdownIt-Anchor" href="#摘自"></a> 摘自</h2><p><a href="https://help.aliyun.com/knowledge_detail/40896.html?spm=5176.10695662.1996646101.searchclickresult.582843c0LhJGp6">Windows2012安装IIS和FTP</a><br><br><a href="https://help.aliyun.com/knowledge_detail/40944.html#windows2012">云服务器 ECS Windows Server 通过 IIS 配置 FTP</a><br><br><a href="https://blog.csdn.net/qq_29473881/article/details/82740592">Xftp 提示无法显示远程文件夹</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>问题</tag>
      
      <tag>记录</tag>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS动画（animation与keyframes）</title>
    <link href="/2019/04/02/CSS%E5%8A%A8%E7%94%BB%EF%BC%88animation%E4%B8%8Ekeyframes%EF%BC%89/"/>
    <url>/2019/04/02/CSS%E5%8A%A8%E7%94%BB%EF%BC%88animation%E4%B8%8Ekeyframes%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="animation"><a class="markdownIt-Anchor" href="#animation"></a> animation</h2><pre class="highlight"><code class="">animation: name duration timing-function delay iteration-count direction;</code></pre><table><thead><tr><th style="text-align:left">属性名</th><th style="text-align:left">中文名</th><th style="text-align:center">值</th></tr></thead><tbody><tr><td style="text-align:left">animation-name</td><td style="text-align:left">keyframe名称</td><td style="text-align:center">/</td></tr><tr><td style="text-align:left">animation-duration</td><td style="text-align:left">持续时间</td><td style="text-align:center">(time)</td></tr><tr><td style="text-align:left">animation-timing-function</td><td style="text-align:left">速度曲线</td><td style="text-align:center">linear | ease | ease-in | ease-out | <br> ease-in-out | cubic-bezier(n,n,n,n)</td></tr><tr><td style="text-align:left">animation-delay</td><td style="text-align:left">开始前的延迟</td><td style="text-align:center">(time)</td></tr><tr><td style="text-align:left">animation-iteration-count</td><td style="text-align:left">播放次数</td><td style="text-align:center">(n) | infinite</td></tr><tr><td style="text-align:left">animation-direction</td><td style="text-align:left">是否轮流反向播放</td><td style="text-align:center">normal | alternate</td></tr><tr><td style="text-align:left">animation-play-state</td><td style="text-align:left">指定动画播放或暂停</td><td style="text-align:center">paused | running</td></tr></tbody></table><p>注：</p><ol><li>time为时间值默认毫秒为单位，可设置秒为单位（ns）</li><li>n表示任意整数</li></ol><h2 id="keyframes"><a class="markdownIt-Anchor" href="#keyframes"></a> @keyframes</h2><pre class="highlight"><code class="">@keyframes name {    from {        color: #fff;    }    to {        color: #000;    }}</code></pre><pre class="highlight"><code class="">@keyframes name {    0% {        color: #fff;    }    100% {        color: #000;    }}</code></pre><ul><li>上面两种效果是等同的<br><br>（可用百分比来规定变化发生的时间，或用关键词 “from” 和 “to”）</li><li>0% 是动画的开始，100% 是动画的完成。</li><li>避免兼容性问题，应该始终定义 0% 和 100% 选择器</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>CSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo d 时出现 On branch master nothing to commit</title>
    <link href="/2019/03/29/Hexo-d-%E6%97%B6%E5%87%BA%E7%8E%B0-On-branch-master-nothing-to-commit/"/>
    <url>/2019/03/29/Hexo-d-%E6%97%B6%E5%87%BA%E7%8E%B0-On-branch-master-nothing-to-commit/</url>
    
    <content type="html"><![CDATA[<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题：</h2><ol><li>Hexo d 时出现 On branch master nothing to commit 和一大串的 warning</li><li>上传不上远程仓库</li></ol><h2 id="解决"><a class="markdownIt-Anchor" href="#解决"></a> 解决</h2><p>删除文件夹里的<code>.deploy_git</code>文件</p><h2 id="参考来源"><a class="markdownIt-Anchor" href="#参考来源"></a> 参考来源</h2><p><a href="https://blog.csdn.net/qq_32846595/article/details/70162069">git 使用——关于使用指令hexo d 出现一大串waring以及无法成功部署到github的解决办法 作者： 寰宇的行者</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>问题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建Hexo博客</title>
    <link href="/2019/03/29/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/"/>
    <url>/2019/03/29/%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="hexo-博客搭建"><a class="markdownIt-Anchor" href="#hexo-博客搭建"></a> Hexo 博客搭建</h1><h2 id="1安装git"><a class="markdownIt-Anchor" href="#1安装git"></a> 1.安装git</h2><ol><li>windows：到git官网上下载 <a href="https://www.git-scm.com/download/win/">Download git</a>,下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。</li><li>linux：一行代码</li></ol><pre class="highlight"><code class="">sudo apt-get install git</code></pre><h2 id="2安装nodejs"><a class="markdownIt-Anchor" href="#2安装nodejs"></a> 2.安装nodeJS</h2><p>Hexo是基于nodeJS编写的，所以需要安装一下nodeJs和里面的npm工具。</p><ul><li>windows：nodejs选择LTS版本就行了。(LTS:长期支持版本)</li><li>linux：</li></ul><pre class="highlight"><code class="">sudo apt-get install nodejssudo apt-get install npm</code></pre><ol start="2"><li>安装完后，打开命令行</li></ol><pre class="highlight"><code class="">    node -vnpm -v</code></pre><h2 id="3安装hexo"><a class="markdownIt-Anchor" href="#3安装hexo"></a> 3.安装Hexo</h2><p>1.先创建一个文件夹blog，然后cd到这个文件夹下（或 文件夹右键-&gt;git bash）</p><pre class="highlight"><code class="">    npm install -g hexo-cli</code></pre><ul><li>可用<code>hexo -v</code>查看一下版本</li></ul><p>初始化hexo</p><pre class="highlight"><code class="">    hexo init myblog    cd myblog //进入文件夹内    npm install</code></pre><p>新建完成后，指定文件夹目录下有：</p><ul><li>node_modules: 依赖包</li><li>public: 存放生成的页面</li><li>scaffolds: 生成文章的一些模板</li><li>source: 存放文章</li><li>themes: 主题</li><li>_config.yml: 博客的配置文件</li></ul><p>生成静态文件<br><br>启动服务器 <code>http://localhost:4000</code></p><pre class="highlight"><code class="">    hexo g    hexo sever  </code></pre><h2 id="4注册github账号-注册github"><a class="markdownIt-Anchor" href="#4注册github账号-注册github"></a> 4.注册Github账号、注册Github</h2><ol><li>注册Github帐号</li><li>登陆后需选择New repository,新建仓库</li><li>创建一个与用户名相同的仓库，<a href="http://xn--yfr16an19l.github.io">后面加.github.io</a></li><li>点击create repository。</li></ol><h2 id="5生成ssh添加到github"><a class="markdownIt-Anchor" href="#5生成ssh添加到github"></a> 5.生成SSH添加到GitHub</h2><ol><li>设置git的身份信息（名字与邮箱）</li></ol><pre class="highlight"><code class="">    git config --global user.name &quot;name&quot;    git config --global user.email &quot;email&quot;</code></pre><ol start="2"><li>创建SSH</li></ol><pre class="highlight"><code class="">ssh-keygen -t rsa -C &quot;email&quot;</code></pre><ol start="3"><li>在 系统盘-&gt;用户-&gt;（用户名）-&gt;.ssh 目录下找到.ssh文件</li></ol><blockquote><p>ssh，简单来讲，就是一个秘钥，其中，<code>id_rsa</code>是你这台电脑的私人秘钥，不能给别人看的，<code>id_rsa.pub</code>是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。</p><p>作者：zjufangzh<br><br>来源：CSDN <br><br>原文：<a href="https://blog.csdn.net/sinat_37781304/article/details/82729029">https://blog.csdn.net/sinat_37781304/article/details/82729029</a> <br><br>版权声明：本文为博主原创文章，转载请附上博文链接！</p></blockquote><ol start="4"><li>在GitHub的setting中，找到SSH keys的设置选项，点击<code>New SSH key</code><br>把你的<code>id_rsa.pub</code>里面的信息复制进去。</li><li>查看是否成功</li></ol><pre class="highlight"><code class="">   ssh -T git@github.com </code></pre><h2 id="6将hexo部署到github"><a class="markdownIt-Anchor" href="#6将hexo部署到github"></a> 6.将Hexo部署到GitHub</h2><ol><li>将hexo和GitHub关联起来,打开站点配置文件 _config.yml，翻到最后，修改为</li></ol><pre class="highlight"><code class="">deploy:  type: git  repo: https://github.com/YourgithubName/YourgithubName.github.io.git  branch: master</code></pre><p>YourgithubName就是你的GitHub账户<br>2. 安装 <strong>deploy-git</strong></p><pre class="highlight"><code class="">npm install hexo-deployer-git --save</code></pre><ol start="3"><li>使用命令部署</li></ol><pre class="highlight"><code class="">hexo cleanhexo generatehexo deploy</code></pre><blockquote><p><code>hexo clean</code>清除了你之前生成的东西，也可以不加。<br><br><code>hexo generate</code> 顾名思义，生成静态文章，可以用 <code>hexo g</code>缩写<br><br><code>hexo deploy</code> 部署文章，可以用<code>hexo d</code>缩写</p></blockquote><p>过一会儿就可以在<code>http://yourname.github.io</code> 这个网站看到你的博客了</p><h2 id="7设置个人域名"><a class="markdownIt-Anchor" href="#7设置个人域名"></a> 7.设置个人域名</h2><p>这步之前博客的地址是<code>yourname.github.io</code>,如果想换个就买个域名。<br>买好了就在域名控制台，选择域名点<strong>解析</strong>添加192.30.252.153 和 192.30.252.154 是GitHub的服务器地址。<br><strong>解析线路选默认</strong></p><ol><li>登陆GitHub, 进入之前创建的仓库，点击settings, 设置Custiom domain,输入你的域名<br></li><li><code>source</code>创建一个名为CHANME的文件，不要后缀，写上域名。</li><li>最后在<strong>git bash</strong> 中输入</li></ol><pre class="highlight"><code class="">hexo cleanhexo ghexo d</code></pre><h2 id="8使用腾讯开发者平台的pages服务进行分流"><a class="markdownIt-Anchor" href="#8使用腾讯开发者平台的pages服务进行分流"></a> 8.使用腾讯开发者平台的pages服务进行分流</h2><p>注：现在coding不能使用pages,得升级账号，腾讯开发者平台的才有此功能。</p><ol><li>注册腾讯云开发者平台账号，或coding用户升级。</li><li>新建项目</li><li>使用Git上传文件项目里</li><li>添加ssh公钥到个人账号的公钥上</li><li>选择项目-&gt;代码-&gt;pages服务，按照指引完成即可</li><li>修改配置文件</li></ol><pre class="highlight"><code class="">deploy:  type: git  repository:      github: git@github.com:ShomyLiu/ShomyLiu.github.io.git      coding: git@git.coding.net:shomyliu/shomyliu.git  branch: master</code></pre><blockquote><p>在博客的source/目录下需要创建一个空白文件,至于原因，是因为 coding.net需要这个文件来作为以静态文件部署的标志。就是说看到这个Staticfile就知道按照静态文件来发布。<br><br>coding还需要在根目录下建一个.nojekyll空文件（coding page 配置hexo报错 the xx theme not be found<br><br>在根目录下建一个.nojekyll空文件就可以了，因为Coding默认支持Jekyll搭建网站）</p></blockquote><ol start="7"><li>域名添加解析，这时要把之前的github的解析改成境外，把coding的设置为默认。</li></ol><h2 id="参考来源"><a class="markdownIt-Anchor" href="#参考来源"></a> 参考来源</h2><ul><li><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029">hexo史上最全搭建教程 作者：zjufangzh</a><br></li><li><a href="https://www.jianshu.com/p/a19962485b4a">Coding Pages 搭建 Hexo 静态博客 作者：Zelsonia</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2019/02/09/hello-world/"/>
    <url>/2019/02/09/hello-world/</url>
    
    <content type="html"><![CDATA[<p>欢迎来到<a href="https://hexo.io/">Hexo</a>! 这是第一个帖子. 点击 <a href="https://hexo.io/docs/">文档</a> 查看更多信息。 如果在使用时有任何问题可以在 <a href="https://hexo.io/docs/troubleshooting.html">故障排除</a> 里找解决办法，或者来<a href="https://github.com/hexojs/hexo/issues">GitHub</a> 问.</p><h2 id="快速上手"><a class="markdownIt-Anchor" href="#快速上手"></a> 快速上手</h2><h3 id="创建新帖"><a class="markdownIt-Anchor" href="#创建新帖"></a> 创建新帖</h3><pre class="highlight"><code class="bash">$ hexo new <span class="hljs-string">"My New Post"</span></code></pre><p>更多信息: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="运行本地服务"><a class="markdownIt-Anchor" href="#运行本地服务"></a> 运行本地服务</h3><pre class="highlight"><code class="bash">$ hexo server</code></pre><p>更多信息: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="生成静态文件"><a class="markdownIt-Anchor" href="#生成静态文件"></a> 生成静态文件</h3><pre class="highlight"><code class="bash">$ hexo generate</code></pre><p>更多信息: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="部署到远程站点"><a class="markdownIt-Anchor" href="#部署到远程站点"></a> 部署到远程站点</h3><pre class="highlight"><code class="bash">$ hexo deploy</code></pre><p>更多信息: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
